-- MySQL Script generated by MySQL Workbench
-- 04/22/17 22:12:48
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema my_uni
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema my_uni
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `my_uni` DEFAULT CHARACTER SET utf8 ;
USE `my_uni` ;

-- -----------------------------------------------------
-- Table `my_uni`.`department`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`department` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `name` VARCHAR(32) NOT NULL,
  `description` VARCHAR(256) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`permission` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `create_self` TINYINT(1) NOT NULL,
  `read_self` TINYINT(1) NOT NULL,
  `update_self` TINYINT(1) NOT NULL,
  `delete_self` TINYINT(1) NOT NULL,
  `create_others` TINYINT(1) NOT NULL,
  `read_others` TINYINT(1) NOT NULL,
  `update_others` TINYINT(1) NOT NULL,
  `delete_others` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`user_role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `name` VARCHAR(32) NOT NULL,
  `description` VARCHAR(256) NOT NULL,
  `is_staff` TINYINT(1) NOT NULL,
  `user_role` INT NOT NULL,
  `permission` INT NOT NULL,
  `user` INT NOT NULL,
  `department` INT NOT NULL,
  `course` INT NOT NULL,
  `semester` INT NOT NULL,
  `course_offering` INT NOT NULL,
  `group` INT NOT NULL,
  `enrollment` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_role_permission1_idx` (`user_role` ASC),
  INDEX `fk_user_role_permission2_idx` (`permission` ASC),
  INDEX `fk_user_role_permission3_idx` (`user` ASC),
  INDEX `fk_user_role_permission4_idx` (`department` ASC),
  INDEX `fk_user_role_permission5_idx` (`course` ASC),
  INDEX `fk_user_role_permission6_idx` (`semester` ASC),
  INDEX `fk_user_role_permission7_idx` (`course_offering` ASC),
  INDEX `fk_user_role_permission8_idx` (`group` ASC),
  INDEX `fk_user_role_permission9_idx` (`enrollment` ASC),
  CONSTRAINT `fk_user_role_permission1`
    FOREIGN KEY (`user_role`)
    REFERENCES `my_uni`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_permission2`
    FOREIGN KEY (`permission`)
    REFERENCES `my_uni`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_permission3`
    FOREIGN KEY (`user`)
    REFERENCES `my_uni`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_permission4`
    FOREIGN KEY (`department`)
    REFERENCES `my_uni`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_permission5`
    FOREIGN KEY (`course`)
    REFERENCES `my_uni`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_permission6`
    FOREIGN KEY (`semester`)
    REFERENCES `my_uni`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_permission7`
    FOREIGN KEY (`course_offering`)
    REFERENCES `my_uni`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_permission8`
    FOREIGN KEY (`group`)
    REFERENCES `my_uni`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_permission9`
    FOREIGN KEY (`enrollment`)
    REFERENCES `my_uni`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `name` VARCHAR(32) NOT NULL,
  `email` VARCHAR(256) NOT NULL,
  `birth_date` DATE NULL,
  `password` BINARY(64) NOT NULL,
  `gender` INT(1) NULL,
  `phone` INT NOT NULL,
  `department_id` INT NOT NULL,
  `user_role_id` INT NOT NULL,
  `email_valid` TINYINT(1) NULL,
  `phone_valid` TINYINT(1) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC),
  INDEX `fk_user_department1_idx` (`department_id` ASC),
  INDEX `fk_user_user_role1_idx` (`user_role_id` ASC),
  CONSTRAINT `fk_user_department1`
    FOREIGN KEY (`department_id`)
    REFERENCES `my_uni`.`department` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_user_role1`
    FOREIGN KEY (`user_role_id`)
    REFERENCES `my_uni`.`user_role` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`course` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `name` VARCHAR(32) NOT NULL,
  `code` VARCHAR(16) NOT NULL,
  `description` VARCHAR(256) NULL,
  `credit_hours` INT NULL,
  `level` INT NULL,
  `department_id` INT NOT NULL,
  `prerequisite_formula` VARCHAR(128) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC),
  INDEX `fk_cource_department1_idx` (`department_id` ASC),
  CONSTRAINT `fk_cource_department1`
    FOREIGN KEY (`department_id`)
    REFERENCES `my_uni`.`department` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`prerequisite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`prerequisite` (
  `cource_id` INT NOT NULL,
  `prerequisite_id` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`cource_id`, `prerequisite_id`),
  INDEX `fk_cource_has_cource_cource2_idx` (`prerequisite_id` ASC),
  INDEX `fk_cource_has_cource_cource1_idx` (`cource_id` ASC),
  CONSTRAINT `fk_cource_has_cource_cource1`
    FOREIGN KEY (`cource_id`)
    REFERENCES `my_uni`.`course` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_cource_has_cource_cource2`
    FOREIGN KEY (`prerequisite_id`)
    REFERENCES `my_uni`.`course` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`semester`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`semester` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `year` YEAR NOT NULL,
  `name` VARCHAR(10) NOT NULL,
  `max_credit_hour` INT NOT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NOT NULL,
  `registration_start_date` DATE NOT NULL,
  `registration_end_date` DATE NOT NULL,
  `department_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Semester_department1_idx` (`department_id` ASC),
  UNIQUE INDEX `year_semester_UNIQUE` (`year` ASC, `name` ASC),
  CONSTRAINT `fk_Semester_department1`
    FOREIGN KEY (`department_id`)
    REFERENCES `my_uni`.`department` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`course_offering`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`course_offering` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `course_id` INT NOT NULL,
  `semester_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_cource_offering_cource1_idx` (`course_id` ASC),
  INDEX `fk_course_offering_semester1_idx` (`semester_id` ASC),
  CONSTRAINT `fk_cource_offering_cource1`
    FOREIGN KEY (`course_id`)
    REFERENCES `my_uni`.`course` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_course_offering_semester1`
    FOREIGN KEY (`semester_id`)
    REFERENCES `my_uni`.`semester` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`group` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `name` VARCHAR(32) NULL,
  `maxStudents` INT NOT NULL,
  `start_time` TIME NULL,
  `duration_time` TIME NULL,
  `course_offering_id` INT NOT NULL,
  `group_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Group_cource_offering1_idx` (`course_offering_id` ASC),
  INDEX `fk_Group_Group1_idx` (`group_id` ASC),
  CONSTRAINT `fk_Group_cource_offering1`
    FOREIGN KEY (`course_offering_id`)
    REFERENCES `my_uni`.`course_offering` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Group_Group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `my_uni`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`enrollment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`enrollment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `user_id` INT NOT NULL,
  `semester_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_enrollment_user1_idx` (`user_id` ASC),
  INDEX `fk_enrollment_semester1_idx` (`semester_id` ASC),
  CONSTRAINT `fk_enrollment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `my_uni`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_enrollment_semester1`
    FOREIGN KEY (`semester_id`)
    REFERENCES `my_uni`.`semester` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`course_offering_enrollment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`course_offering_enrollment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `enrollment_id` INT NOT NULL,
  `course_offering_id` INT NOT NULL,
  `group_id` INT NOT NULL,
  `section_id` INT NULL,
  `total_grade` INT NULL DEFAULT NULL,
  `letter_grade` CHAR(2) NULL DEFAULT NULL,
  INDEX `fk_enrollment_has_group_group1_idx` (`group_id` ASC),
  INDEX `fk_enrollment_has_group_enrollment1_idx` (`enrollment_id` ASC),
  PRIMARY KEY (`id`),
  INDEX `fk_enrollment_has_group_course_offering1_idx` (`course_offering_id` ASC),
  INDEX `fk_enrollment_has_group_group2_idx` (`section_id` ASC),
  UNIQUE INDEX `enrollment_id_and_course_UNIQUE` (`enrollment_id` ASC, `course_offering_id` ASC),
  CONSTRAINT `fk_enrollment_has_group_enrollment1`
    FOREIGN KEY (`enrollment_id`)
    REFERENCES `my_uni`.`enrollment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_enrollment_has_group_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `my_uni`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_enrollment_has_group_course_offering1`
    FOREIGN KEY (`course_offering_id`)
    REFERENCES `my_uni`.`course_offering` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_enrollment_has_group_group2`
    FOREIGN KEY (`section_id`)
    REFERENCES `my_uni`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`options`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`options` (
  `key` VARCHAR(32) NOT NULL,
  `value` VARCHAR(512) NOT NULL,
  `auto_load` TINYINT(1) NOT NULL DEFAULT 0,
  UNIQUE INDEX `name_UNIQUE` (`key` ASC),
  PRIMARY KEY (`key`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`course_offering_staff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`course_offering_staff` (
  `user_id` INT NOT NULL,
  `course_offering_id` INT NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`user_id`, `course_offering_id`),
  INDEX `fk_user_has_course_offering_course_offering1_idx` (`course_offering_id` ASC),
  INDEX `fk_user_has_course_offering_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_course_offering_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `my_uni`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_course_offering_course_offering1`
    FOREIGN KEY (`course_offering_id`)
    REFERENCES `my_uni`.`course_offering` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`validation_key`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`validation_key` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `reason` VARCHAR(32) NULL,
  `key` CHAR(64) NULL,
  `user_id` INT NOT NULL,
  `expire_after` TIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_validation_key_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_validation_key_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `my_uni`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_uni`.`timestamps`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`timestamps` (
  `create_time`  NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time`  NULL);


-- -----------------------------------------------------
-- Table `my_uni`.`group_duration`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_uni`.`group_duration` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `start_time` TIME NULL,
  `duration` TIME NULL,
  `repeat_every_x_days` INT NULL DEFAULT 7,
  `group_id` INT NOT NULL,
  INDEX `fk_lecture_duration_group1_idx` (`group_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_lecture_duration_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `my_uni`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
